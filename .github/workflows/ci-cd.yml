name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # D√©clenchement du pipeline sur les pushes dans main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

    steps:
    - name: ‚úÖ Checkout code
      uses: actions/checkout@v3

    - name: üß± Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: üîê Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: üõ† Build and push Docker images
      run: |
        SERVICES=("user-service" "movie-service" "rating-service" "frontend")
        for SERVICE in "${SERVICES[@]}"; do
          echo "üöß Building $SERVICE"
          docker build -t $DOCKER_USERNAME/$SERVICE:latest ./$SERVICE
          echo "üì§ Pushing $SERVICE"
          docker push $DOCKER_USERNAME/$SERVICE:latest
        done

    - name: üß™ Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: ‚öôÔ∏è Configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${KUBE_CONFIG_DATA}" | base64 --decode > $HOME/.kube/config

    - name: üöÄ Deploy to Kubernetes
      run: |
        SERVICES=("postgres" "user-service" "movie-service" "rating-service" "frontend")
        for SERVICE in "${SERVICES[@]}"; do
          echo "üì¶ Applying deployment and service for $SERVICE"
          kubectl apply -f ./$SERVICE/deployment.yaml
          kubectl apply -f ./$SERVICE/service.yaml
        done

    - name: ‚è≥ Wait for all pods to be ready
      run: |
        SERVICES=("user-service" "movie-service" "rating-service" "frontend")
        for SERVICE in "${SERVICES[@]}"; do
          echo "üïí Waiting for pod $SERVICE to be ready..."
          kubectl wait --for=condition=Ready pod -l app=$SERVICE --timeout=120s
        done

    - name: üîç Test user-service endpoint (optionnel)
      run: |
        kubectl port-forward svc/user-service 8002:8002 &
        sleep 5
        curl -f http://localhost:8002/users/ || exit 1
